<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>name.javacode.unittesting</groupId>
	<artifactId>jmock-learning</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>jmock-learning</name>
	<packaging>war</packaging>
	<properties>
		<project.build.sourceLevel>1.8</project.build.sourceLevel>
		<project.build.targetLevel>1.8</project.build.targetLevel>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<jetty.version>8.1.13.v20130916</jetty.version>
		<jersey.version>2.3.1</jersey.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock-junit4</artifactId>
			<version>2.5.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock-legacy</artifactId>
			<version>2.5.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-server</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet-core</artifactId>
			<version>${jersey.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
			</plugin>
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jetty.version}</version>
				<configuration>
					<!-- Jetty must be started by run-forked goal in order for the JVM debug 
						arguments to take effect -->
					<jvmArgs>${jetty.jvmArgs}</jvmArgs>
					<stopPort>4001</stopPort>
					<stopKey>stop</stopKey>
					<webAppConfig>
						<contextPath>/${project.artifactId}</contextPath>
					</webAppConfig>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<source>${project.build.sourceLevel}</source>
					<target>${project.build.targetLevel}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
					<showDeprecation>true</showDeprecation>
					<showWarnings>true</showWarnings>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.13</version>
				<configuration>
					<disableXmlReport>true</disableXmlReport>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9</version>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>jetty-debug</id>
			<properties>
				<jetty.jvmArgs>-ea -Xdebug
					-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=4000</jetty.jvmArgs>
			</properties>
		</profile>
		<profile>
			<id>jetty</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<jetty.jvmArgs>-ea</jetty.jvmArgs>
			</properties>
		</profile>
	</profiles>
</project>