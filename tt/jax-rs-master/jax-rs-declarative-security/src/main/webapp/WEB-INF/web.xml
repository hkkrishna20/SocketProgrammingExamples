<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
	version="3.1">
	<display-name>JAX-RS security practice code</display-name>

	<!-- I fought with this for hours. Why can't they just enable the feature 
		by looking at the annotation on the resource? -->
	<context-param>
		<param-name>resteasy.role.based.security</param-name>
		<param-value>true</param-value>
	</context-param>

	<!-- <security-constraint> element must be present; the web container checks 
		for security before JAX-RS does and without a <security-constraint>, the 
		proper security context is not set. For Wildfly at least, the authorization 
		annotations take precedence over the auth-constraint. This seems to be a 
		bug because web.xml should override annotations for backward compatibility. -->
	<security-constraint>
		<web-resource-collection>
			<web-resource-name>Calculator Declarative</web-resource-name>
			<url-pattern>/calc/*</url-pattern>
			<http-method>GET</http-method>
		</web-resource-collection>
		<!-- <auth-constraint> <role-name>mathematician</role-name> </auth-constraint> -->
	</security-constraint>

	<login-config>
		<auth-method>BASIC</auth-method>
		<realm-name>ApplicationRealm</realm-name>
	</login-config>

	<!-- <security-role> <role-name>mathematician</role-name> </security-role> -->

</web-app>