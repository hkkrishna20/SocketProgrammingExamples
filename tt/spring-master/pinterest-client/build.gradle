import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

buildscript {
    repositories {
        jcenter()
        maven { url "$springMilestoneRepo" }
        maven { url "$springSnapshotRepo" }
        maven { url "$gradlePluginRepo" }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
        classpath("org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion")
    }
}

apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
apply plugin: "kotlin"
apply plugin: "kotlin-spring"

version = "1.0.0-SNAPSHOT"

repositories {
    jcenter()
    maven { url "$springMilestoneRepo" }
    maven { url "$springSnapshotRepo" }
    maven { url = "$gradleReleaseRepo" }
}

tasks.withType(KotlinCompile) {
    kotlinOptions {
        includeRuntime = true
        jvmTarget = "1.8"
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

bootRun {
    systemProperties System.properties
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
    }

    dependencies {
        dependency("com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion")
        dependency("org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlinVersion") {
            exclude "org.jetbrains.kotlin:kotlin-stdlib-jre7"
        }
        dependencySet(group:"com.squareup.okhttp3", version: "$okhttpVersion") {
            entry "okhttp"
            entry "logging-interceptor"
        }
    }
}

dependencies {
    compile("com.squareup.okhttp3:okhttp")
    compile("com.squareup.okhttp3:logging-interceptor")
    compile("io.projectreactor:reactor-core")
    compile("org.springframework.boot:spring-boot-starter-webflux")
    compile("org.springframework:spring-context-support")
    runtime("com.github.ben-manes.caffeine:caffeine:$caffeineCacheVersion")
    compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlinVersion")
    compile("org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion")
    compile("com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("io.projectreactor:reactor-test")
    testCompile("io.kotlintest:kotlintest:$kotlinTestVersion")
    testCompile("org.mockito:mockito-core")
}