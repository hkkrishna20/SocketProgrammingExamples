
package fi.vm.kapa.xml.rova.api.delegate;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * WSDL-file for RoVa Delegate service
 *         
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "Rova_Delegate_Service", targetNamespace = "http://xml.vrk.fi/ws/Rova/Delegate", wsdlLocation = "/wsdl/delegate.wsdl")
public class RovaDelegateService_Service
    extends Service
{

    private final static URL ROVADELEGATESERVICE_WSDL_LOCATION;
    private final static WebServiceException ROVADELEGATESERVICE_EXCEPTION;
    private final static QName ROVADELEGATESERVICE_QNAME = new QName("http://xml.vrk.fi/ws/Rova/Delegate", "Rova_Delegate_Service");

    static {
        ROVADELEGATESERVICE_WSDL_LOCATION = fi.vm.kapa.xml.rova.api.delegate.RovaDelegateService_Service.class.getResource("/wsdl/delegate.wsdl");
        WebServiceException e = null;
        if (ROVADELEGATESERVICE_WSDL_LOCATION == null) {
            e = new WebServiceException("Cannot find '/wsdl/delegate.wsdl' wsdl. Place the resource correctly in the classpath.");
        }
        ROVADELEGATESERVICE_EXCEPTION = e;
    }

    public RovaDelegateService_Service() {
        super(__getWsdlLocation(), ROVADELEGATESERVICE_QNAME);
    }

    public RovaDelegateService_Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), ROVADELEGATESERVICE_QNAME, features);
    }

    public RovaDelegateService_Service(URL wsdlLocation) {
        super(wsdlLocation, ROVADELEGATESERVICE_QNAME);
    }

    public RovaDelegateService_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, ROVADELEGATESERVICE_QNAME, features);
    }

    public RovaDelegateService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public RovaDelegateService_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns RovaDelegatePortType
     */
    @WebEndpoint(name = "rovaDelegatePort")
    public RovaDelegatePortType getRovaDelegatePort() {
        return super.getPort(new QName("http://xml.vrk.fi/ws/Rova/Delegate", "rovaDelegatePort"), RovaDelegatePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RovaDelegatePortType
     */
    @WebEndpoint(name = "rovaDelegatePort")
    public RovaDelegatePortType getRovaDelegatePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://xml.vrk.fi/ws/Rova/Delegate", "rovaDelegatePort"), RovaDelegatePortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (ROVADELEGATESERVICE_EXCEPTION!= null) {
            throw ROVADELEGATESERVICE_EXCEPTION;
        }
        return ROVADELEGATESERVICE_WSDL_LOCATION;
    }

}
